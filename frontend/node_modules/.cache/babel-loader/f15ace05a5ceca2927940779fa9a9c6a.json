{"ast":null,"code":"var _jsxFileName = \"D:\\\\HitSto\\\\frontend\\\\src\\\\screens\\\\ProductDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Rating from \"../components/Rating\";\nimport { Link } from \"react-router-dom\";\nimport { listProductDetails } from \"../actions/productActions\";\nimport { Row, Col, ListGroup, Button, Image, ListGroupItem, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductDetails = _ref => {\n  _s();\n\n  let {\n    history,\n    match\n  } = _ref;\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-outline-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-left    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \"\\xA0 GO BACK\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} Reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Price : \\u20B9\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: \"Status :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: product.countInStock > 0 ? \"In Stock \" : \"out of stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: \"Qty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: qty,\n              onChange: e => setQty(e.target.value),\n              children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: x + 1,\n                children: x + 1\n              }, x + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-block\",\n            type: \"button\",\n            style: {\n              padding: \"0.75rem  5.5rem\"\n            },\n            onClick: addToCartHandler,\n            children: \"Add to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductDetails, \"lDBTZcuE3rLJp3qsVWTmqiqsJAA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductDetails;\nexport default ProductDetails; // import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//   Row,\n//   Col,\n//   Image,\n//   ListGroup,\n//   Card,\n//   Button,\n//   Form,\n// } from \"react-bootstrap\";\n// import Rating from \"../components/Rating\";\n// import Message from \"../components/shared/Message\";\n// import Loader from \"../components/shared/Loader\";\n// import Meta from \"../components/shared/Meta\";\n// import {\n//   listProductDetails,\n//   createProductReview,\n// } from \"../actions/productActions\";\n// import { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstant\";\n// const ProductDetails = ({ history, match }) => {\n//   const [qty, setQty] = useState(1);\n//   const [rating, setRating] = useState(0);\n//   const [comment, setComment] = useState(\"\");\n//   const dispatch = useDispatch();\n//   const productDetails = useSelector((state) => state.productDetails);\n//   const { loading, error, product } = productDetails;\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n//   const productReviewCreate = useSelector((state) => state.productReviewCreate);\n//   const {\n//     success: successProductReview,\n//     loading: loadingProductReview,\n//     error: errorProductReview,\n//   } = productReviewCreate;\n//   useEffect(() => {\n//     if (successProductReview) {\n//       setRating(0);\n//       setComment(\"\");\n//     }\n//     if (!product._id || product._id !== match.params.id) {\n//       dispatch(listProductDetails(match.params.id));\n//       dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n//     }\n//   }, [dispatch, match, successProductReview]);\n//   const addToCartHandler = () => {\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\n//   };\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     dispatch(\n//       createProductReview(match.params.id, {\n//         rating,\n//         comment,\n//       })\n//     );\n//   };\n//   return (\n//     <>\n//       <Link className=\"btn btn-light my-3\" to=\"/\">\n//         Go Back\n//       </Link>\n//       {loading ? (\n//         <Loader />\n//       ) : error ? (\n//         <Message variant=\"danger\">{error}</Message>\n//       ) : (\n//         <>\n//           <Meta title={product.name} />\n//           <Row>\n//             <Col md={6}>\n//               <Image src={product.image} alt={product.name} fluid />\n//             </Col>\n//             <Col md={3}>\n//               <ListGroup variant=\"flush\">\n//                 <ListGroup.Item>\n//                   <h3>{product.name}</h3>\n//                 </ListGroup.Item>\n//                 <ListGroup.Item>\n//                   <Rating\n//                     value={product.rating}\n//                     text={`${product.numReviews} reviews`}\n//                   />\n//                 </ListGroup.Item>\n//                 <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n//                 <ListGroup.Item>\n//                   Description: {product.description}\n//                 </ListGroup.Item>\n//               </ListGroup>\n//             </Col>\n//             <Col md={3}>\n//               <Card>\n//                 <ListGroup variant=\"flush\">\n//                   <ListGroup.Item>\n//                     <Row>\n//                       <Col>Price:</Col>\n//                       <Col>\n//                         <strong>${product.price}</strong>\n//                       </Col>\n//                     </Row>\n//                   </ListGroup.Item>\n//                   <ListGroup.Item>\n//                     <Row>\n//                       <Col>Status:</Col>\n//                       <Col>\n//                         {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n//                       </Col>\n//                     </Row>\n//                   </ListGroup.Item>\n//                   {product.countInStock > 0 && (\n//                     <ListGroup.Item>\n//                       <Row>\n//                         <Col>Qty</Col>\n//                         <Col>\n//                           <Form.Control\n//                             as=\"select\"\n//                             value={qty}\n//                             onChange={(e) => setQty(e.target.value)}\n//                           >\n//                             {[...Array(product.countInStock).keys()].map(\n//                               (x) => (\n//                                 <option key={x + 1} value={x + 1}>\n//                                   {x + 1}\n//                                 </option>\n//                               )\n//                             )}\n//                           </Form.Control>\n//                         </Col>\n//                       </Row>\n//                     </ListGroup.Item>\n//                   )}\n//                   <ListGroup.Item>\n//                     <Button\n//                       onClick={addToCartHandler}\n//                       className=\"btn-block\"\n//                       type=\"button\"\n//                       disabled={product.countInStock === 0}\n//                     >\n//                       Add To Cart\n//                     </Button>\n//                   </ListGroup.Item>\n//                 </ListGroup>\n//               </Card>\n//             </Col>\n//           </Row>\n//           <Row>\n//             <Col md={6}>\n//               <h2>Reviews</h2>\n//               {product.reviews.length === 0 && <Message>No Reviews</Message>}\n//               <ListGroup variant=\"flush\">\n//                 {product.reviews.map((review) => (\n//                   <ListGroup.Item key={review._id}>\n//                     <strong>{review.name}</strong>\n//                     <Rating value={review.rating} />\n//                     <p>{review.createdAt.substring(0, 10)}</p>\n//                     <p>{review.comment}</p>\n//                   </ListGroup.Item>\n//                 ))}\n//                 <ListGroup.Item>\n//                   <h2>Write a Customer Review</h2>\n//                   {successProductReview && (\n//                     <Message variant=\"success\">\n//                       Review submitted successfully\n//                     </Message>\n//                   )}\n//                   {loadingProductReview && <Loader />}\n//                   {errorProductReview && (\n//                     <Message variant=\"danger\">{errorProductReview}</Message>\n//                   )}\n//                   {userInfo ? (\n//                     <Form onSubmit={submitHandler}>\n//                       <Form.Group controlId=\"rating\">\n//                         <Form.Label>Rating</Form.Label>\n//                         <Form.Control\n//                           as=\"select\"\n//                           value={rating}\n//                           onChange={(e) => setRating(e.target.value)}\n//                         >\n//                           <option value=\"\">Select...</option>\n//                           <option value=\"1\">1 - Poor</option>\n//                           <option value=\"2\">2 - Fair</option>\n//                           <option value=\"3\">3 - Good</option>\n//                           <option value=\"4\">4 - Very Good</option>\n//                           <option value=\"5\">5 - Excellent</option>\n//                         </Form.Control>\n//                       </Form.Group>\n//                       <Form.Group controlId=\"comment\">\n//                         <Form.Label>Comment</Form.Label>\n//                         <Form.Control\n//                           as=\"textarea\"\n//                           row=\"3\"\n//                           value={comment}\n//                           onChange={(e) => setComment(e.target.value)}\n//                         ></Form.Control>\n//                       </Form.Group>\n//                       <Button\n//                         disabled={loadingProductReview}\n//                         type=\"submit\"\n//                         variant=\"primary\"\n//                       >\n//                         Submit\n//                       </Button>\n//                     </Form>\n//                   ) : (\n//                     <Message>\n//                       Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\n//                     </Message>\n//                   )}\n//                 </ListGroup.Item>\n//               </ListGroup>\n//             </Col>\n//           </Row>\n//         </>\n//       )}\n//     </>\n//   );\n// };\n// export default ProductDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"sources":["D:/HitSto/frontend/src/screens/ProductDetails.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Rating","Link","listProductDetails","Row","Col","ListGroup","Button","Image","ListGroupItem","Form","ProductDetails","history","match","qty","setQty","dispatch","productDetails","state","loading","error","product","params","id","addToCartHandler","push","image","name","rating","numReviews","price","description","countInStock","e","target","value","Array","keys","map","x","padding"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Rating from \"../components/Rating\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Button,\r\n  Image,\r\n  ListGroupItem,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nconst ProductDetails = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className=\"btn btn-outline-dark\">\r\n        <i className=\"fas fa-arrow-left    \"></i>\r\n        &nbsp; GO BACK\r\n      </Link>\r\n\r\n      <Row>\r\n        <Col md={6}>\r\n          <Image src={product.image} alt={product.name} fluid />\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroupItem>\r\n              <h3>{product.name}</h3>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} Reviews`}\r\n              />\r\n            </ListGroupItem>\r\n            <ListGroupItem>Price : ₹{product.price}</ListGroupItem>\r\n            <ListGroupItem>{product.description}</ListGroupItem>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroupItem>\r\n            <Row>\r\n              <Col>Status :</Col>\r\n              <Col>\r\n                {product.countInStock > 0 ? \"In Stock \" : \"out of stock\"}\r\n              </Col>\r\n            </Row>\r\n          </ListGroupItem>\r\n          {product.countInStock > 0 && (\r\n            <ListGroupItem>\r\n              <Row>\r\n                <Col>Qty</Col>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={qty}\r\n                  onChange={(e) => setQty(e.target.value)}\r\n                >\r\n                  {[...Array(product.countInStock).keys()].map((x) => (\r\n                    <option key={x + 1} value={x + 1}>\r\n                      {x + 1}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Row>\r\n            </ListGroupItem>\r\n          )}\r\n          <ListGroupItem>\r\n            <Button\r\n              className=\"btn-block\"\r\n              type=\"button\"\r\n              style={{ padding: \"0.75rem  5.5rem\" }}\r\n              onClick={addToCartHandler}\r\n            >\r\n              Add to cart\r\n            </Button>\r\n          </ListGroupItem>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   Row,\r\n//   Col,\r\n//   Image,\r\n//   ListGroup,\r\n//   Card,\r\n//   Button,\r\n//   Form,\r\n// } from \"react-bootstrap\";\r\n// import Rating from \"../components/Rating\";\r\n// import Message from \"../components/shared/Message\";\r\n// import Loader from \"../components/shared/Loader\";\r\n// import Meta from \"../components/shared/Meta\";\r\n// import {\r\n//   listProductDetails,\r\n//   createProductReview,\r\n// } from \"../actions/productActions\";\r\n// import { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstant\";\r\n\r\n// const ProductDetails = ({ history, match }) => {\r\n//   const [qty, setQty] = useState(1);\r\n//   const [rating, setRating] = useState(0);\r\n//   const [comment, setComment] = useState(\"\");\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const productDetails = useSelector((state) => state.productDetails);\r\n//   const { loading, error, product } = productDetails;\r\n\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const { userInfo } = userLogin;\r\n\r\n//   const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n//   const {\r\n//     success: successProductReview,\r\n//     loading: loadingProductReview,\r\n//     error: errorProductReview,\r\n//   } = productReviewCreate;\r\n\r\n//   useEffect(() => {\r\n//     if (successProductReview) {\r\n//       setRating(0);\r\n//       setComment(\"\");\r\n//     }\r\n//     if (!product._id || product._id !== match.params.id) {\r\n//       dispatch(listProductDetails(match.params.id));\r\n//       dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n//     }\r\n//   }, [dispatch, match, successProductReview]);\r\n\r\n//   const addToCartHandler = () => {\r\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n//   };\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     dispatch(\r\n//       createProductReview(match.params.id, {\r\n//         rating,\r\n//         comment,\r\n//       })\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Link className=\"btn btn-light my-3\" to=\"/\">\r\n//         Go Back\r\n//       </Link>\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant=\"danger\">{error}</Message>\r\n//       ) : (\r\n//         <>\r\n//           <Meta title={product.name} />\r\n//           <Row>\r\n//             <Col md={6}>\r\n//               <Image src={product.image} alt={product.name} fluid />\r\n//             </Col>\r\n//             <Col md={3}>\r\n//               <ListGroup variant=\"flush\">\r\n//                 <ListGroup.Item>\r\n//                   <h3>{product.name}</h3>\r\n//                 </ListGroup.Item>\r\n//                 <ListGroup.Item>\r\n//                   <Rating\r\n//                     value={product.rating}\r\n//                     text={`${product.numReviews} reviews`}\r\n//                   />\r\n//                 </ListGroup.Item>\r\n//                 <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n//                 <ListGroup.Item>\r\n//                   Description: {product.description}\r\n//                 </ListGroup.Item>\r\n//               </ListGroup>\r\n//             </Col>\r\n//             <Col md={3}>\r\n//               <Card>\r\n//                 <ListGroup variant=\"flush\">\r\n//                   <ListGroup.Item>\r\n//                     <Row>\r\n//                       <Col>Price:</Col>\r\n//                       <Col>\r\n//                         <strong>${product.price}</strong>\r\n//                       </Col>\r\n//                     </Row>\r\n//                   </ListGroup.Item>\r\n\r\n//                   <ListGroup.Item>\r\n//                     <Row>\r\n//                       <Col>Status:</Col>\r\n//                       <Col>\r\n//                         {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n//                       </Col>\r\n//                     </Row>\r\n//                   </ListGroup.Item>\r\n\r\n//                   {product.countInStock > 0 && (\r\n//                     <ListGroup.Item>\r\n//                       <Row>\r\n//                         <Col>Qty</Col>\r\n//                         <Col>\r\n//                           <Form.Control\r\n//                             as=\"select\"\r\n//                             value={qty}\r\n//                             onChange={(e) => setQty(e.target.value)}\r\n//                           >\r\n//                             {[...Array(product.countInStock).keys()].map(\r\n//                               (x) => (\r\n//                                 <option key={x + 1} value={x + 1}>\r\n//                                   {x + 1}\r\n//                                 </option>\r\n//                               )\r\n//                             )}\r\n//                           </Form.Control>\r\n//                         </Col>\r\n//                       </Row>\r\n//                     </ListGroup.Item>\r\n//                   )}\r\n\r\n//                   <ListGroup.Item>\r\n//                     <Button\r\n//                       onClick={addToCartHandler}\r\n//                       className=\"btn-block\"\r\n//                       type=\"button\"\r\n//                       disabled={product.countInStock === 0}\r\n//                     >\r\n//                       Add To Cart\r\n//                     </Button>\r\n//                   </ListGroup.Item>\r\n//                 </ListGroup>\r\n//               </Card>\r\n//             </Col>\r\n//           </Row>\r\n//           <Row>\r\n//             <Col md={6}>\r\n//               <h2>Reviews</h2>\r\n//               {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n//               <ListGroup variant=\"flush\">\r\n//                 {product.reviews.map((review) => (\r\n//                   <ListGroup.Item key={review._id}>\r\n//                     <strong>{review.name}</strong>\r\n//                     <Rating value={review.rating} />\r\n//                     <p>{review.createdAt.substring(0, 10)}</p>\r\n//                     <p>{review.comment}</p>\r\n//                   </ListGroup.Item>\r\n//                 ))}\r\n//                 <ListGroup.Item>\r\n//                   <h2>Write a Customer Review</h2>\r\n//                   {successProductReview && (\r\n//                     <Message variant=\"success\">\r\n//                       Review submitted successfully\r\n//                     </Message>\r\n//                   )}\r\n//                   {loadingProductReview && <Loader />}\r\n//                   {errorProductReview && (\r\n//                     <Message variant=\"danger\">{errorProductReview}</Message>\r\n//                   )}\r\n//                   {userInfo ? (\r\n//                     <Form onSubmit={submitHandler}>\r\n//                       <Form.Group controlId=\"rating\">\r\n//                         <Form.Label>Rating</Form.Label>\r\n//                         <Form.Control\r\n//                           as=\"select\"\r\n//                           value={rating}\r\n//                           onChange={(e) => setRating(e.target.value)}\r\n//                         >\r\n//                           <option value=\"\">Select...</option>\r\n//                           <option value=\"1\">1 - Poor</option>\r\n//                           <option value=\"2\">2 - Fair</option>\r\n//                           <option value=\"3\">3 - Good</option>\r\n//                           <option value=\"4\">4 - Very Good</option>\r\n//                           <option value=\"5\">5 - Excellent</option>\r\n//                         </Form.Control>\r\n//                       </Form.Group>\r\n//                       <Form.Group controlId=\"comment\">\r\n//                         <Form.Label>Comment</Form.Label>\r\n//                         <Form.Control\r\n//                           as=\"textarea\"\r\n//                           row=\"3\"\r\n//                           value={comment}\r\n//                           onChange={(e) => setComment(e.target.value)}\r\n//                         ></Form.Control>\r\n//                       </Form.Group>\r\n//                       <Button\r\n//                         disabled={loadingProductReview}\r\n//                         type=\"submit\"\r\n//                         variant=\"primary\"\r\n//                       >\r\n//                         Submit\r\n//                       </Button>\r\n//                     </Form>\r\n//                   ) : (\r\n//                     <Message>\r\n//                       Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n//                     </Message>\r\n//                   )}\r\n//                 </ListGroup.Item>\r\n//               </ListGroup>\r\n//             </Col>\r\n//           </Row>\r\n//         </>\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProductDetails;\r\n"]},"metadata":{},"sourceType":"module"}
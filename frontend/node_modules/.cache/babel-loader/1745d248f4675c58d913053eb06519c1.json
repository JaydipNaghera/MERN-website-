{"ast":null,"code":"var _jsxFileName = \"D:\\\\HitSto\\\\frontend\\\\src\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./bootstrap.min.css\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\nconst BASE_URL = \"https://jsonplaceholder.typicode.com/posts\";\n\nclass DataFetcher extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isLoading: false,\n      error: null,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(this.props.url).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw Error(\"Error fetching posts!\");\n      }\n    }).then(posts => this.setState({\n      posts,\n      isLoading: false\n    })).catch(error => this.setState({\n      error\n    }));\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n\n}\n\nclass AppRenderProps extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"With Render Props\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataFetcher, {\n        url: BASE_URL,\n        children: _ref => {\n          let {\n            error,\n            isLoading,\n            posts\n          } = _ref;\n\n          if (error) {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: error.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 22\n            }, this);\n          }\n\n          if (isLoading) {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading posts...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 22\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), posts.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction useDataFetcher(url) {\n  _s();\n\n  const [posts, setPosts] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    setIsLoading(true);\n    fetch(url).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw Error(\"Error fetching posts!\");\n      }\n    }).then(posts => {\n      setPosts(posts);\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error);\n    });\n  }, [url]);\n  return {\n    posts,\n    isLoading,\n    error\n  };\n}\n\n_s(useDataFetcher, \"U7SjUU57hevi2ApSFMf+mZv3qA0=\");\n\nfunction AppHooks() {\n  _s2();\n\n  const {\n    posts,\n    isLoading,\n    error\n  } = useDataFetcher(BASE_URL);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AppHooks, \"I03DjEXvRwurW/HdWflyeFOGmIM=\", false, function () {\n  return [useDataFetcher];\n});\n\n_c = AppHooks;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(AppHooks, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 131,\n  columnNumber: 17\n}, this), rootElement); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"AppHooks\");","map":{"version":3,"sources":["D:/HitSto/frontend/src/index.js"],"names":["React","ReactDOM","Provider","store","App","reportWebVitals","render","document","getElementById","BASE_URL","DataFetcher","Component","state","isLoading","error","posts","componentDidMount","setState","fetch","props","url","then","res","ok","json","Error","catch","children","AppRenderProps","color","message","map","post","title","body","useDataFetcher","setPosts","useState","setIsLoading","setError","useEffect","AppHooks","rootElement"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./bootstrap.min.css\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nconst BASE_URL = \"https://jsonplaceholder.typicode.com/posts\";\n\nclass DataFetcher extends React.Component {\n  state = {\n    isLoading: false,\n    error: null,\n    posts: [],\n  };\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    fetch(this.props.url)\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error fetching posts!\");\n        }\n      })\n      .then((posts) => this.setState({ posts, isLoading: false }))\n      .catch((error) => this.setState({ error }));\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nclass AppRenderProps extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>With Render Props</h1>\n        <DataFetcher url={BASE_URL}>\n          {({ error, isLoading, posts }) => {\n            if (error) {\n              return <p style={{ color: \"red\" }}>{error.message}</p>;\n            }\n\n            if (isLoading) {\n              return <p>Loading posts...</p>;\n            }\n\n            return (\n              <div>\n                <h1>App</h1>\n                {posts.map((post) => (\n                  <>\n                    <h3>{post.title}</h3>\n                    <p>{post.body}</p>\n                  </>\n                ))}\n              </div>\n            );\n          }}\n        </DataFetcher>\n      </div>\n    );\n  }\n}\n\nfunction useDataFetcher(url) {\n  const [posts, setPosts] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    fetch(url)\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(\"Error fetching posts!\");\n        }\n      })\n      .then((posts) => {\n        setPosts(posts);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }, [url]);\n\n  return { posts, isLoading, error };\n}\n\nfunction AppHooks() {\n  const { posts, isLoading, error } = useDataFetcher(BASE_URL);\n\n  if (error) {\n    return <p style={{ color: \"red\" }}>{error.message}</p>;\n  }\n\n  if (isLoading) {\n    return <p>Loading posts...</p>;\n  }\n\n  return (\n    <div>\n      <h1>App</h1>\n      {posts.map((post) => (\n        <>\n          <h3>{post.title}</h3>\n          <p>{post.body}</p>\n        </>\n      ))}\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<AppHooks />, rootElement);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}
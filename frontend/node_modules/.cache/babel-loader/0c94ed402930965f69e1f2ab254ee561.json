{"ast":null,"code":"var _jsxFileName = \"D:\\\\HitSto\\\\frontend\\\\src\\\\components\\\\Paynow.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/shared/Loader\";\nimport { getOrderDetails, payOrder } from \"../actions/orderAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paynow = _ref => {\n  _s();\n\n  let {\n    totalPrice\n  } = _ref;\n\n  const tokenHandler = token => {\n    console.log(token);\n  };\n\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails; //   const orderPay = useSelector((state) => state.orderPay);\n  //   const { loading: loadingPay, success: successpay } = orderPay;\n  //   if (!loading) {\n  //     //   Calculate prices\n  //     const addDecimals = (num) => {\n  //       return (Math.round(num * 100) / 100).toFixed(2);\n  //     };\n  //   }\n  //   order.itemsPrice = addDecimals(\n  //     order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  //   );\n\n  return /*#__PURE__*/_jsxDEV(StripeCheckout, {\n    amount: totalPrice * 100,\n    shippingAddress: true,\n    token: tokenHandler,\n    stripeKey: \"pk_test_51Ko1zESDgbhTyiLt8q9daejUyc17BLSpXooITl0SsyakGLieaieUNOhlZw9RmfMtXk8ZjhLd6MqE7iJTLfaUSpWE00RdoMO8VY\",\n    currency: \"INR\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Paynow, \"2YcQ46hamtIwKvzaRcbdTCVJXQw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Paynow;\nexport default Paynow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paynow\");","map":{"version":3,"sources":["D:/HitSto/frontend/src/components/Paynow.jsx"],"names":["React","Button","StripeCheckout","useDispatch","useSelector","Loader","getOrderDetails","payOrder","Paynow","totalPrice","tokenHandler","token","console","log","orderDetails","state","order","loading","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,wBAA1C;;;AAEA,MAAMC,MAAM,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;;AAChC,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAFD;;AAGA,QAAMG,YAAY,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BJ,YAAlC,CALgC,CAOlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEE,sBACE,QAAC,cAAD;AACE,IAAA,MAAM,EAAEL,UAAU,GAAG,GADvB;AAEE,IAAA,eAAe,MAFjB;AAGE,IAAA,KAAK,EAAEC,YAHT;AAIE,IAAA,SAAS,EAAC,6GAJZ;AAKE,IAAA,QAAQ,EAAC,KALX;AAAA,2BAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/BD;;GAAMF,M;UAIiBJ,W;;;KAJjBI,M;AAiCN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderAction\";\r\n\r\nconst Paynow = ({ totalPrice}) => {\r\n  const tokenHandler = (token) => {\r\n    console.log(token);\r\n  };\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n//   const orderPay = useSelector((state) => state.orderPay);\r\n//   const { loading: loadingPay, success: successpay } = orderPay;\r\n//   if (!loading) {\r\n//     //   Calculate prices\r\n//     const addDecimals = (num) => {\r\n//       return (Math.round(num * 100) / 100).toFixed(2);\r\n//     };\r\n//   }\r\n\r\n//   order.itemsPrice = addDecimals(\r\n//     order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n//   );\r\n\r\n  return (\r\n    <StripeCheckout\r\n      amount={totalPrice * 100}\r\n      shippingAddress\r\n      token={tokenHandler}\r\n      stripeKey=\"pk_test_51Ko1zESDgbhTyiLt8q9daejUyc17BLSpXooITl0SsyakGLieaieUNOhlZw9RmfMtXk8ZjhLd6MqE7iJTLfaUSpWE00RdoMO8VY\"\r\n      currency=\"INR\"\r\n    >\r\n      <Button>Pay Now</Button>\r\n    </StripeCheckout>\r\n  );\r\n};\r\n\r\nexport default Paynow;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userDetailsReducer\n});\nconst intialState = {\n  // cart: { cartItem: \"JD\" },\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, intialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/HitSto/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","cartReducer","userInfoFromStorage","localStorage","getItem","JSON","parse","cartItemsFromStorage","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","intialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,2BAHP;AAIA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,QAKO,yBALP;AAMA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMI,OAAO,GAAGjB,eAAe,CAAC;AAC9BkB,EAAAA,WAAW,EAAEd,kBADiB;AAE9Be,EAAAA,cAAc,EAAEd,qBAFc;AAG9Be,EAAAA,IAAI,EAAEV,WAHwB;AAI9BW,EAAAA,SAAS,EAAEf,gBAJmB;AAK9BgB,EAAAA,YAAY,EAAEf,mBALgB;AAM9BgB,EAAAA,WAAW,EAAEf,kBANiB;AAO9BgB,EAAAA,iBAAiB,EAAEhB;AAPW,CAAD,CAA/B;AASA,MAAMiB,WAAW,GAAG;AAClB;AACAL,EAAAA,IAAI,EAAE;AAAEM,IAAAA,SAAS,EAAEV;AAAb,GAFY;AAGlBK,EAAAA,SAAS,EAAE;AAAEM,IAAAA,QAAQ,EAAEhB;AAAZ;AAHO,CAApB;AAKA,MAAMiB,UAAU,GAAG,CAAC1B,KAAD,CAAnB;AACA,MAAM2B,KAAK,GAAG9B,WAAW,CACvBkB,OADuB,EAEvBQ,WAFuB,EAGvBtB,mBAAmB,CAACF,eAAe,CAAC,GAAG2B,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from \"./reducers/productReducer\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n} from \"./reducers/userReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userDetailsReducer\r\n});\r\nconst intialState = {\r\n  // cart: { cartItem: \"JD\" },\r\n  cart: { cartItems: cartItemsFromStorage },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  intialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}
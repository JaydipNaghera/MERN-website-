{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar _require = require('../../dist/utils/razorpay-utils'),\n    normalizeBoolean = _require.normalizeBoolean;\n\nvar _require2 = require('../utils/razorpay-utils'),\n    normalizeNotes = _require2.normalizeNotes;\n\nmodule.exports = function (api) {\n  var BASE_URL = \"/settlements\";\n  return {\n    createOndemandSettlement: function createOndemandSettlement() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      /*\n       * Create on-demand settlement\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL + '/ondemand',\n          notes = params.notes,\n          settle_full_balance = params.settle_full_balance,\n          rest = _objectWithoutProperties(params, ['notes', 'settle_full_balance']);\n\n      var data = Object.assign(_extends({\n        settle_full_balance: normalizeBoolean(settle_full_balance)\n      }, rest), normalizeNotes(notes));\n      return api.post({\n        url: url,\n        data: data\n      }, callback);\n    },\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      /*\n       * Fetch all settlements\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL;\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    fetch: function fetch(settlementId, callback) {\n      /*\n       * Fetch a settlement\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n      if (!settlementId) {\n        return Promise.reject(\"settlement Id is mandatroy\");\n      }\n\n      return api.get({\n        url: BASE_URL + '/' + settlementId\n      }, callback);\n    },\n    fetchOndemandSettlementById: function fetchOndemandSettlementById(settlementId, callback) {\n      /*\n       * Fetch On-demand Settlements by ID\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n      if (!settlementId) {\n        return Promise.reject(\"settlment Id is mandatroy\");\n      }\n\n      return api.get({\n        url: BASE_URL + '/ondemand/' + settlementId\n      }, callback);\n    },\n    fetchAllOndemandSettlement: function fetchAllOndemandSettlement() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      /*\n       * Fetch all demand settlements\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL + '/ondemand';\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    reports: function reports() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      /*\n      * Settlement report for a month\n      *\n      * @param {Object} params\n      * @param {Function} callback\n      *\n      * @return {Promise}\n      */\n\n      var day = params.day,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL + '/report/combined';\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          day: day,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    }\n  };\n};","map":{"version":3,"sources":["D:/HitSto/node_modules/razorpay/dist/resources/settlements.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_require","require","normalizeBoolean","_require2","normalizeNotes","module","exports","api","BASE_URL","createOndemandSettlement","params","undefined","callback","url","notes","settle_full_balance","rest","data","post","all","from","to","count","skip","get","fetch","settlementId","Promise","reject","fetchOndemandSettlementById","fetchAllOndemandSettlement","reports","day"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _require = require('../../dist/utils/razorpay-utils'),\n    normalizeBoolean = _require.normalizeBoolean;\n\nvar _require2 = require('../utils/razorpay-utils'),\n    normalizeNotes = _require2.normalizeNotes;\n\nmodule.exports = function (api) {\n\n  var BASE_URL = \"/settlements\";\n\n  return {\n    createOndemandSettlement: function createOndemandSettlement() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n\n      /*\n       * Create on-demand settlement\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL + '/ondemand',\n          notes = params.notes,\n          settle_full_balance = params.settle_full_balance,\n          rest = _objectWithoutProperties(params, ['notes', 'settle_full_balance']);\n\n\n      var data = Object.assign(_extends({\n        settle_full_balance: normalizeBoolean(settle_full_balance)\n      }, rest), normalizeNotes(notes));\n\n      return api.post({\n        url: url,\n        data: data\n      }, callback);\n    },\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n\n      /*\n       * Fetch all settlements\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL;\n\n\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    fetch: function fetch(settlementId, callback) {\n\n      /*\n       * Fetch a settlement\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!settlementId) {\n\n        return Promise.reject(\"settlement Id is mandatroy\");\n      }\n\n      return api.get({\n        url: BASE_URL + '/' + settlementId\n      }, callback);\n    },\n\n    fetchOndemandSettlementById: function fetchOndemandSettlementById(settlementId, callback) {\n\n      /*\n       * Fetch On-demand Settlements by ID\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!settlementId) {\n\n        return Promise.reject(\"settlment Id is mandatroy\");\n      }\n\n      return api.get({\n        url: BASE_URL + '/ondemand/' + settlementId\n      }, callback);\n    },\n    fetchAllOndemandSettlement: function fetchAllOndemandSettlement() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n\n      /*\n       * Fetch all demand settlements\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL + '/ondemand';\n\n\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    reports: function reports() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n\n      /*\n      * Settlement report for a month\n      *\n      * @param {Object} params\n      * @param {Function} callback\n      *\n      * @return {Promise}\n      */\n\n      var day = params.day,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL + '/report/combined';\n\n\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          day: day,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    }\n  };\n};"]},"metadata":{},"sourceType":"script"}
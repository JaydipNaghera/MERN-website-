{"ast":null,"code":"var _jsxFileName = \"D:\\\\HitSto\\\\frontend\\\\src\\\\components\\\\Paynow.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/shared/Loader\";\nimport { getOrderDetails, payOrder } from \"../actions/orderAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paynow = _ref => {\n  _s();\n\n  let {\n    totalPrice,\n    match\n  } = _ref;\n\n  const tokenHandler = token => {\n    console.log(token);\n  };\n\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successpay\n  } = orderPay;\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n  }\n\n  const successPaymentHandler = paymentResult => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  return /*#__PURE__*/_jsxDEV(StripeCheckout, {\n    amount: totalPrice * 100,\n    shippingAddress: true,\n    token: tokenHandler,\n    stripeKey: \"pk_test_51Ko1zESDgbhTyiLt8q9daejUyc17BLSpXooITl0SsyakGLieaieUNOhlZw9RmfMtXk8ZjhLd6MqE7iJTLfaUSpWE00RdoMO8VY\",\n    currency: \"INR\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Paynow, \"T7ULchWAc05314xTbomIWleBoqM=\", false, function () {\n  return [useSelector];\n});\n\n_c = Paynow;\nexport default Paynow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paynow\");","map":{"version":3,"sources":["D:/HitSto/frontend/src/components/Paynow.jsx"],"names":["React","Button","StripeCheckout","useDispatch","useSelector","Loader","getOrderDetails","payOrder","Paynow","totalPrice","match","tokenHandler","token","console","log","orderPay","state","loading","loadingPay","success","successpay","addDecimals","num","Math","round","toFixed","order","itemsPrice","orderItems","reduce","acc","item","price","qty","successPaymentHandler","paymentResult","dispatch","orderId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,wBAA1C;;;AAEA,MAAMC,MAAM,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA2B;;AACzC,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAFD;;AAGA,QAAMG,QAAQ,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM;AAAEE,IAAAA,OAAO,EAAEC,UAAX;AAAuBC,IAAAA,OAAO,EAAEC;AAAhC,MAA+CL,QAArD;;AACA,MAAI,CAACE,OAAL,EAAc;AACZ;AACA,UAAMI,WAAW,GAAIC,GAAD,IAAS;AAC3B,aAAO,CAACC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,GAAjB,IAAwB,GAAzB,EAA8BG,OAA9B,CAAsC,CAAtC,CAAP;AACD,KAFD;;AAIAC,IAAAA,KAAK,CAACC,UAAN,GAAmBN,WAAW,CAC5BK,KAAK,CAACE,UAAN,CAAiBC,MAAjB,CAAwB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACE,GAA/D,EAAoE,CAApE,CAD4B,CAA9B;AAGD;;AAED,QAAMC,qBAAqB,GAAIC,aAAD,IAAmB;AAC/CtB,IAAAA,OAAO,CAACC,GAAR,CAAYqB,aAAZ;AACAC,IAAAA,QAAQ,CAAC7B,QAAQ,CAAC8B,OAAD,EAAUF,aAAV,CAAT,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,cAAD;AACE,IAAA,MAAM,EAAE1B,UAAU,GAAG,GADvB;AAEE,IAAA,eAAe,MAFjB;AAGE,IAAA,KAAK,EAAEE,YAHT;AAIE,IAAA,SAAS,EAAC,6GAJZ;AAKE,IAAA,QAAQ,EAAC,KALX;AAAA,2BAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjCD;;GAAMH,M;UAIaJ,W;;;KAJbI,M;AAmCN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderAction\";\r\n\r\nconst Paynow = ({ totalPrice, match, }) => {\r\n  const tokenHandler = (token) => {\r\n    console.log(token);\r\n  };\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successpay } = orderPay;\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return (\r\n    <StripeCheckout\r\n      amount={totalPrice * 100}\r\n      shippingAddress\r\n      token={tokenHandler}\r\n      stripeKey=\"pk_test_51Ko1zESDgbhTyiLt8q9daejUyc17BLSpXooITl0SsyakGLieaieUNOhlZw9RmfMtXk8ZjhLd6MqE7iJTLfaUSpWE00RdoMO8VY\"\r\n      currency=\"INR\"\r\n    >\r\n      <Button>Pay Now</Button>\r\n    </StripeCheckout>\r\n  );\r\n};\r\n\r\nexport default Paynow;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\HitSto\\\\frontend\\\\src\\\\screens\\\\ProductScreen.jsx\";\nimport React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = _ref => {\n  let {\n    product\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"my-3 p-3 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/product/${product._id}`,\n        children: /*#__PURE__*/_jsxDEV(Card.Img, {\n          src: product.image,\n          variant: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/product/${product._id}`,\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            as: \"div\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          as: \"div\",\n          children: /*#__PURE__*/_jsxDEV(Rating, {\n            value: product.rating,\n            text: `${product.numReviews} reviews`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          as: \"div\",\n          children: [\"\\u20B9 \", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = ProductScreen;\nexport default ProductScreen; // import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//   Row,\n//   Col,\n//   Image,\n//   ListGroup,\n//   Card,\n//   Button,\n//   Form,\n// } from \"react-bootstrap\";\n// import Rating from \"../components/Rating\";\n// import Message from \"../components/shared/Message\";\n// import Loader from \"../components/shared/Loader\";\n// import Meta from \"../components/shared/Meta\";\n// import {\n//   listProductDetails,\n//   createProductReview,\n// } from \"../actions/productActions\";\n// import { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstant\";\n// const ProductScreen = ({ history, match }) => {\n//   const [qty, setQty] = useState(1);\n//   const [rating, setRating] = useState(0);\n//   const [comment, setComment] = useState(\"\");\n//   const dispatch = useDispatch();\n//   const productDetails = useSelector((state) => state.productDetails);\n//   const { loading, error, product } = productDetails;\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n//   const productReviewCreate = useSelector((state) => state.productReviewCreate);\n//   const {\n//     success: successProductReview,\n//     loading: loadingProductReview,\n//     error: errorProductReview,\n//   } = productReviewCreate;\n//   useEffect(() => {\n//     if (successProductReview) {\n//       setRating(0);\n//       setComment(\"\");\n//     }\n//     if (!product._id || product._id !== match.params.id) {\n//       dispatch(listProductDetails(match.params.id));\n//       dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n//     }\n//   }, [dispatch, match, successProductReview]);\n//   const addToCartHandler = () => {\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\n//   };\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     dispatch(\n//       createProductReview(match.params.id, {\n//         rating,\n//         comment,\n//       })\n//     );\n//   };\n//   return (\n//     <>\n//       <Link className=\"btn btn-light my-3\" to=\"/\">\n//         Go Back\n//       </Link>\n//       {loading ? (\n//         <Loader />\n//       ) : error ? (\n//         <Message variant=\"danger\">{error}</Message>\n//       ) : (\n//         <>\n//           <Meta title={product.name} />\n//           <Row>\n//             <Col md={6}>\n//               <Image src={product.image} alt={product.name} fluid />\n//             </Col>\n//             <Col md={3}>\n//               <ListGroup variant=\"flush\">\n//                 <ListGroup.Item>\n//                   <h3>{product.name}</h3>\n//                 </ListGroup.Item>\n//                 <ListGroup.Item>\n//                   <Rating\n//                     value={product.rating}\n//                     text={`${product.numReviews} reviews`}\n//                   />\n//                 </ListGroup.Item>\n//                 <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n//                 <ListGroup.Item>\n//                   Description: {product.description}\n//                 </ListGroup.Item>\n//               </ListGroup>\n//             </Col>\n//             <Col md={3}>\n//               <Card>\n//                 <ListGroup variant=\"flush\">\n//                   <ListGroup.Item>\n//                     <Row>\n//                       <Col>Price:</Col>\n//                       <Col>\n//                         <strong>${product.price}</strong>\n//                       </Col>\n//                     </Row>\n//                   </ListGroup.Item>\n//                   <ListGroup.Item>\n//                     <Row>\n//                       <Col>Status:</Col>\n//                       <Col>\n//                         {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n//                       </Col>\n//                     </Row>\n//                   </ListGroup.Item>\n//                   {product.countInStock > 0 && (\n//                     <ListGroup.Item>\n//                       <Row>\n//                         <Col>Qty</Col>\n//                         <Col>\n//                           <Form.Control\n//                             as=\"select\"\n//                             value={qty}\n//                             onChange={(e) => setQty(e.target.value)}\n//                           >\n//                             {[...Array(product.countInStock).keys()].map(\n//                               (x) => (\n//                                 <option key={x + 1} value={x + 1}>\n//                                   {x + 1}\n//                                 </option>\n//                               )\n//                             )}\n//                           </Form.Control>\n//                         </Col>\n//                       </Row>\n//                     </ListGroup.Item>\n//                   )}\n//                   <ListGroup.Item>\n//                     <Button\n//                       onClick={addToCartHandler}\n//                       className=\"btn-block\"\n//                       type=\"button\"\n//                       disabled={product.countInStock === 0}\n//                     >\n//                       Add To Cart\n//                     </Button>\n//                   </ListGroup.Item>\n//                 </ListGroup>\n//               </Card>\n//             </Col>\n//           </Row>\n//           <Row>\n//             <Col md={6}>\n//               <h2>Reviews</h2>\n//               {product.reviews.length === 0 && <Message>No Reviews</Message>}\n//               <ListGroup variant=\"flush\">\n//                 {product.reviews.map((review) => (\n//                   <ListGroup.Item key={review._id}>\n//                     <strong>{review.name}</strong>\n//                     <Rating value={review.rating} />\n//                     <p>{review.createdAt.substring(0, 10)}</p>\n//                     <p>{review.comment}</p>\n//                   </ListGroup.Item>\n//                 ))}\n//                 <ListGroup.Item>\n//                   <h2>Write a Customer Review</h2>\n//                   {successProductReview && (\n//                     <Message variant=\"success\">\n//                       Review submitted successfully\n//                     </Message>\n//                   )}\n//                   {loadingProductReview && <Loader />}\n//                   {errorProductReview && (\n//                     <Message variant=\"danger\">{errorProductReview}</Message>\n//                   )}\n//                   {userInfo ? (\n//                     <Form onSubmit={submitHandler}>\n//                       <Form.Group controlId=\"rating\">\n//                         <Form.Label>Rating</Form.Label>\n//                         <Form.Control\n//                           as=\"select\"\n//                           value={rating}\n//                           onChange={(e) => setRating(e.target.value)}\n//                         >\n//                           <option value=\"\">Select...</option>\n//                           <option value=\"1\">1 - Poor</option>\n//                           <option value=\"2\">2 - Fair</option>\n//                           <option value=\"3\">3 - Good</option>\n//                           <option value=\"4\">4 - Very Good</option>\n//                           <option value=\"5\">5 - Excellent</option>\n//                         </Form.Control>\n//                       </Form.Group>\n//                       <Form.Group controlId=\"comment\">\n//                         <Form.Label>Comment</Form.Label>\n//                         <Form.Control\n//                           as=\"textarea\"\n//                           row=\"3\"\n//                           value={comment}\n//                           onChange={(e) => setComment(e.target.value)}\n//                         ></Form.Control>\n//                       </Form.Group>\n//                       <Button\n//                         disabled={loadingProductReview}\n//                         type=\"submit\"\n//                         variant=\"primary\"\n//                       >\n//                         Submit\n//                       </Button>\n//                     </Form>\n//                   ) : (\n//                     <Message>\n//                       Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\n//                     </Message>\n//                   )}\n//                 </ListGroup.Item>\n//               </ListGroup>\n//             </Col>\n//           </Row>\n//         </>\n//       )}\n//     </>\n//   );\n// };\n// export default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["D:/HitSto/frontend/src/screens/ProductScreen.jsx"],"names":["React","Card","Rating","Link","ProductScreen","product","_id","image","name","rating","numReviews","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,aAAa,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACrC,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,YAAWA,OAAO,CAACC,GAAI,EAAlC;AAAA,+BACE,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,GAAG,EAAED,OAAO,CAACE,KAAvB;AAA8B,UAAA,OAAO,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAWF,OAAO,CAACC,GAAI,EAAlC;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAC,KAAf;AAAA,mCACE;AAAA,wBAASD,OAAO,CAACG;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,EAAE,EAAC,KAAd;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,KAAK,EAAEH,OAAO,CAACI,MADjB;AAEE,YAAA,IAAI,EAAG,GAAEJ,OAAO,CAACK,UAAW;AAF9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAYE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,EAAE,EAAC,KAAd;AAAA,gCAAuBL,OAAO,CAACM,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD,CAxBD;;KAAMP,a;AA0BN,eAAeA,aAAfsourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductScreen = ({ product }) => {\r\n  return ( \r\n    <>\r\n      <Card className=\"my-3 p-3 rounded\">\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Img src={product.image} variant=\"top\" />\r\n        </Link>\r\n        <Card.Body>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Card.Title as=\"div\">\r\n              <strong>{product.name}</strong>\r\n            </Card.Title>\r\n          </Link>\r\n          <Card.Text as=\"div\">\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n            />\r\n          </Card.Text>\r\n          <Card.Text as=\"div\">₹ {product.price}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   Row,\r\n//   Col,\r\n//   Image,\r\n//   ListGroup,\r\n//   Card,\r\n//   Button,\r\n//   Form,\r\n// } from \"react-bootstrap\";\r\n// import Rating from \"../components/Rating\";\r\n// import Message from \"../components/shared/Message\";\r\n// import Loader from \"../components/shared/Loader\";\r\n// import Meta from \"../components/shared/Meta\";\r\n// import {\r\n//   listProductDetails,\r\n//   createProductReview,\r\n// } from \"../actions/productActions\";\r\n// import { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstant\";\r\n\r\n// const ProductScreen = ({ history, match }) => {\r\n//   const [qty, setQty] = useState(1);\r\n//   const [rating, setRating] = useState(0);\r\n//   const [comment, setComment] = useState(\"\");\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const productDetails = useSelector((state) => state.productDetails);\r\n//   const { loading, error, product } = productDetails;\r\n\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const { userInfo } = userLogin;\r\n\r\n//   const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n//   const {\r\n//     success: successProductReview,\r\n//     loading: loadingProductReview,\r\n//     error: errorProductReview,\r\n//   } = productReviewCreate;\r\n\r\n//   useEffect(() => {\r\n//     if (successProductReview) {\r\n//       setRating(0);\r\n//       setComment(\"\");\r\n//     }\r\n//     if (!product._id || product._id !== match.params.id) {\r\n//       dispatch(listProductDetails(match.params.id));\r\n//       dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n//     }\r\n//   }, [dispatch, match, successProductReview]);\r\n\r\n//   const addToCartHandler = () => {\r\n//     history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n//   };\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     dispatch(\r\n//       createProductReview(match.params.id, {\r\n//         rating,\r\n//         comment,\r\n//       })\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Link className=\"btn btn-light my-3\" to=\"/\">\r\n//         Go Back\r\n//       </Link>\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant=\"danger\">{error}</Message>\r\n//       ) : (\r\n//         <>\r\n//           <Meta title={product.name} />\r\n//           <Row>\r\n//             <Col md={6}>\r\n//               <Image src={product.image} alt={product.name} fluid />\r\n//             </Col>\r\n//             <Col md={3}>\r\n//               <ListGroup variant=\"flush\">\r\n//                 <ListGroup.Item>\r\n//                   <h3>{product.name}</h3>\r\n//                 </ListGroup.Item>\r\n//                 <ListGroup.Item>\r\n//                   <Rating\r\n//                     value={product.rating}\r\n//                     text={`${product.numReviews} reviews`}\r\n//                   />\r\n//                 </ListGroup.Item>\r\n//                 <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n//                 <ListGroup.Item>\r\n//                   Description: {product.description}\r\n//                 </ListGroup.Item>\r\n//               </ListGroup>\r\n//             </Col>\r\n//             <Col md={3}>\r\n//               <Card>\r\n//                 <ListGroup variant=\"flush\">\r\n//                   <ListGroup.Item>\r\n//                     <Row>\r\n//                       <Col>Price:</Col>\r\n//                       <Col>\r\n//                         <strong>${product.price}</strong>\r\n//                       </Col>\r\n//                     </Row>\r\n//                   </ListGroup.Item>\r\n\r\n//                   <ListGroup.Item>\r\n//                     <Row>\r\n//                       <Col>Status:</Col>\r\n//                       <Col>\r\n//                         {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n//                       </Col>\r\n//                     </Row>\r\n//                   </ListGroup.Item>\r\n\r\n//                   {product.countInStock > 0 && (\r\n//                     <ListGroup.Item>\r\n//                       <Row>\r\n//                         <Col>Qty</Col>\r\n//                         <Col>\r\n//                           <Form.Control\r\n//                             as=\"select\"\r\n//                             value={qty}\r\n//                             onChange={(e) => setQty(e.target.value)}\r\n//                           >\r\n//                             {[...Array(product.countInStock).keys()].map(\r\n//                               (x) => (\r\n//                                 <option key={x + 1} value={x + 1}>\r\n//                                   {x + 1}\r\n//                                 </option>\r\n//                               )\r\n//                             )}\r\n//                           </Form.Control>\r\n//                         </Col>\r\n//                       </Row>\r\n//                     </ListGroup.Item>\r\n//                   )}\r\n\r\n//                   <ListGroup.Item>\r\n//                     <Button\r\n//                       onClick={addToCartHandler}\r\n//                       className=\"btn-block\"\r\n//                       type=\"button\"\r\n//                       disabled={product.countInStock === 0}\r\n//                     >\r\n//                       Add To Cart\r\n//                     </Button>\r\n//                   </ListGroup.Item>\r\n//                 </ListGroup>\r\n//               </Card>\r\n//             </Col>\r\n//           </Row>\r\n//           <Row>\r\n//             <Col md={6}>\r\n//               <h2>Reviews</h2>\r\n//               {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n//               <ListGroup variant=\"flush\">\r\n//                 {product.reviews.map((review) => (\r\n//                   <ListGroup.Item key={review._id}>\r\n//                     <strong>{review.name}</strong>\r\n//                     <Rating value={review.rating} />\r\n//                     <p>{review.createdAt.substring(0, 10)}</p>\r\n//                     <p>{review.comment}</p>\r\n//                   </ListGroup.Item>\r\n//                 ))}\r\n//                 <ListGroup.Item>\r\n//                   <h2>Write a Customer Review</h2>\r\n//                   {successProductReview && (\r\n//                     <Message variant=\"success\">\r\n//                       Review submitted successfully\r\n//                     </Message>\r\n//                   )}\r\n//                   {loadingProductReview && <Loader />}\r\n//                   {errorProductReview && (\r\n//                     <Message variant=\"danger\">{errorProductReview}</Message>\r\n//                   )}\r\n//                   {userInfo ? (\r\n//                     <Form onSubmit={submitHandler}>\r\n//                       <Form.Group controlId=\"rating\">\r\n//                         <Form.Label>Rating</Form.Label>\r\n//                         <Form.Control\r\n//                           as=\"select\"\r\n//                           value={rating}\r\n//                           onChange={(e) => setRating(e.target.value)}\r\n//                         >\r\n//                           <option value=\"\">Select...</option>\r\n//                           <option value=\"1\">1 - Poor</option>\r\n//                           <option value=\"2\">2 - Fair</option>\r\n//                           <option value=\"3\">3 - Good</option>\r\n//                           <option value=\"4\">4 - Very Good</option>\r\n//                           <option value=\"5\">5 - Excellent</option>\r\n//                         </Form.Control>\r\n//                       </Form.Group>\r\n//                       <Form.Group controlId=\"comment\">\r\n//                         <Form.Label>Comment</Form.Label>\r\n//                         <Form.Control\r\n//                           as=\"textarea\"\r\n//                           row=\"3\"\r\n//                           value={comment}\r\n//                           onChange={(e) => setComment(e.target.value)}\r\n//                         ></Form.Control>\r\n//                       </Form.Group>\r\n//                       <Button\r\n//                         disabled={loadingProductReview}\r\n//                         type=\"submit\"\r\n//                         variant=\"primary\"\r\n//                       >\r\n//                         Submit\r\n//                       </Button>\r\n//                     </Form>\r\n//                   ) : (\r\n//                     <Message>\r\n//                       Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n//                     </Message>\r\n//                   )}\r\n//                 </ListGroup.Item>\r\n//               </ListGroup>\r\n//             </Col>\r\n//           </Row>\r\n//         </>\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProductScreen;\r\n"]},"metadata":{},"sourceType":"module"}